CREATE DATABASE hospital_ms;
USE hospital_ms;

CREATE TABLE LOGIN (
    USERNAME VARCHAR(20) PRIMARY KEY,  
    PASSWORD VARCHAR(100) NOT NULL ,    
    ROLE VARCHAR(20) NOT NULL          
);


CREATE TABLE PATIENT
(
P_ID INT PRIMARY KEY AUTO_INCREMENT,
P_NAME VARCHAR(50) NOT NULL, 
GENDER VARCHAR(10), 
ADDRESS VARCHAR(30),
DOB DATE,
PHONE_NO VARCHAR(15), 
DIAGNOSIS VARCHAR(50),
ADMITTED BOOLEAN DEFAULT FALSE
);

CREATE TABLE DOCTOR(
    DOC_ID INT AUTO_INCREMENT PRIMARY KEY,
    DOC_NAME VARCHAR(50) NOT NULL,
    QUALIFICATION VARCHAR(50),
    SPECIALIZATION VARCHAR(50),
    PHONE_NO VARCHAR(15),
    ON_LEAVE BOOLEAN DEFAULT FALSE 
);


CREATE TABLE APPOINTMENT(
APPOINTMENT_ID INT PRIMARY KEY AUTO_INCREMENT,
 P_ID INT,
 P_NAME VARCHAR(50),
 DOC_ID INT REFERENCES DOCTOR(DOC_ID),
 DOC_NAME VARCHAR(50),
 APP_DATE DATE, 
 APP_TIME TIME, 
 APP_STATUS VARCHAR(15),
FOREIGN KEY (P_ID) REFERENCES PATIENT(P_ID)
); 




INSERT INTO DOCTOR (DOC_NAME, QUALIFICATION, SPECIALIZATION, PHONE_NO) VALUES 
('Dr. Emily Carter', 'MD ,FACS', 'Cardiothoracic Surgery', '555-0101'),
('Dr. Ben Hanna', 'DO', 'Pediatrics', '555-0102'),
('Dr. Aisha Khan', 'MBBS, MRCP', 'Neurology', '555-0103');


-- PHARMACY TABLE
CREATE TABLE PHARMACY (
    DRUG_ID INT PRIMARY KEY AUTO_INCREMENT,
    DRUG_NAME VARCHAR(50) NOT NULL,
    PRICE FLOAT NOT NULL,
    CONCENTRATION VARCHAR(10),
    SUPPLIER VARCHAR(50), 
    MFG_DATE DATE, 
    EXPIRY_DATE DATE,
    STOCK_LEVEL INT, 
    STOCK_AVAILABLE BOOLEAN DEFAULT TRUE
);

-- TABLE FOR VIEWING PRESCRIPTIONS
CREATE TABLE PRESCRIPTION (
    PRESCRIPTION_ID INT PRIMARY KEY AUTO_INCREMENT,
    P_ID INT REFERENCES PATIENT(P_ID),
    DOC_ID INT REFERENCES DOCTOR(DOC_ID),
    DRUG_ID INT REFERENCES PHARMACY(DRUG_ID),
    PRESCRIPTION_DATE DATE,
    DOSAGE VARCHAR(50), 
    DURATION_DAYS INT
);


-- TABLE FOR ISSUING MEDICATION
CREATE TABLE DISPENSED_MEDICINE (
    DISPENSE_ID INT PRIMARY KEY AUTO_INCREMENT,
    PRESCRIPTION_ID INT NOT NULL REFERENCES PRESCRIPTION(PRESCRIPTION_ID),
    DRUG_ID INT NOT NULL REFERENCES PHARMACY(DRUG_ID),
    P_ID INT NOT NULL REFERENCES PATIENT(P_ID),
    QUANTITY INT NOT NULL,
    PRICE FLOAT ,
    TOTAL_PRICE FLOAT ,
    DISPENSE_STATUS VARCHAR(20) DEFAULT 'PENDING' -- PENDING / DISPENSED
); 

-- BILLING
CREATE TABLE BILLING(
BILL_ID INT PRIMARY KEY AUTO_INCREMENT,
 P_ID INT,
 P_NAME VARCHAR(50),
 AMOUNT FLOAT NOT NULL,
 PAYMENT_STATUS VARCHAR(15),
 FOREIGN KEY (P_ID) REFERENCES PATIENT(P_ID));
 
 

CREATE TABLE DOCTOR_QUEUE (
    QUEUE_ID INT AUTO_INCREMENT PRIMARY KEY,
    DOC_ID INT NOT NULL REFERENCES DOCTOR(DOC_ID),
    P_ID INT NOT NULL REFERENCES PATIENT(P_ID),
    TOKEN_NO INT NOT NULL,
    QUEUE_STATUS VARCHAR(20) DEFAULT 'WAITING' -- WAITING / IN_PROGRESS / DONE
);

-- Table to store patient medical history
CREATE TABLE MedicalHistory (
    history_id INT PRIMARY KEY AUTO_INCREMENT,   
    P_ID INT NOT NULL REFERENCES PATIENT(P_ID),                    
    diagnosis VARCHAR(255),                      
    treatment VARCHAR(255),                    
    prescription VARCHAR(255),                   
    visit_date DATE NOT NULL                

);


SELECT A.P_ID, A.P_NAME, A.DOC_NAME FROM APPOINTMENT A JOIN PATIENT P ON
A.P_ID=P.P_ID 
JOIN DOCTOR D ON A.DOC_ID=D.DOC_ID;


 
SELECT A.P_ID, A.P_NAME FROM BILLING A JOIN PATIENT B ON A.P_ID=B.P_ID;


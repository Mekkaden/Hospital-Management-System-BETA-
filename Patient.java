import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class Patient {

    private Connection conn;

    public Patient() {
        connect();
    }

    private void connect() {
        try {
            conn = Dbconnection.getConnection(); 
            if (conn == null) {
                System.out.println(" Database connection failed!");
            }
        } catch (Exception e) {
            System.out.println("DB Connection Error: " + e.getMessage());
        }
    }

    public void close() {
        try { 
            if (conn != null && !conn.isClosed()) conn.close(); 
        } catch (Exception ignored) {}
    }



    private int id;                     // Auto-generated by DB
    private String name;
    private String gender;
    private String address;
    private Date dob;                    // java.sql.Date for SQL DATE
    private String phone;
    private String diagnosis;
    private boolean admitted;

    // Constructor for new patient (id auto-generated)
    public Patient(String name, String gender, String address, Date dob, String phone, String diagnosis) {
        this.name = name;
        this.gender = gender;
        this.address = address;
        this.dob = dob;
        this.phone = phone;
        this.diagnosis = diagnosis;
        this.admitted = false;
    }

    // Constructor if patient already exists in DB
    public Patient(int id, String name, String gender, String address, Date dob, String phone, String diagnosis, boolean admitted) {
        this.id = id;
        this.name = name;
        this.gender = gender;
        this.address = address;
        this.dob = dob;
        this.phone = phone;
        this.diagnosis = diagnosis;
        this.admitted = admitted;
    }

    // Save new patient to DB
    public void save() throws SQLException {
        Connection con = Dbconnection.getConnection();
        if (con != null) {
            String sql = "INSERT INTO PATIENT (P_NAME, GENDER, ADDRESS, DOB, PHONE_NO, DIAGNOSIS, ADMITTED) VALUES (?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement ps = con.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
            ps.setString(1, name);
            ps.setString(2, gender);
            ps.setString(3, address);
            ps.setDate(4, dob);
            ps.setString(5, phone);
            ps.setString(6, diagnosis);
            ps.setBoolean(7, admitted);
            ps.executeUpdate();

            ResultSet rs = ps.getGeneratedKeys();
            if (rs.next()) {
                id = rs.getInt(1);
            }
            con.close();
        }
    }

    // Update patient field
    public void update(String field, String value) throws SQLException {
        Connection con = Dbconnection.getConnection();
        if (con != null) {
            String sql = "UPDATE PATIENT SET " + field + "=? WHERE P_ID=?";
            PreparedStatement ps = con.prepareStatement(sql);

            if (field.equalsIgnoreCase("DOB")) {
                ps.setDate(1, Date.valueOf(value));
            } else if (field.equalsIgnoreCase("ADMITTED")) {
                ps.setBoolean(1, Boolean.parseBoolean(value));
            } else {
                ps.setString(1, value);
            }

            ps.setInt(2, id);
            ps.executeUpdate();
            con.close();
        }
    }

  
    public void addMedicalRecord(String diagnosis, String treatment, String prescription, Date visitDate) throws SQLException {
        Connection con = Dbconnection.getConnection();
        if (con != null) {
            String sql = "INSERT INTO MedicalHistory (P_ID, diagnosis, treatment, prescription, visit_date) VALUES (?, ?, ?, ?, ?)";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, id);
            ps.setString(2, diagnosis);
            ps.setString(3, treatment);
            ps.setString(4, prescription);
            ps.setDate(5, visitDate);
            ps.executeUpdate();
            con.close();
        }
    }

    public List<String> getMedicalHistory() throws SQLException {
        List<String> history = new ArrayList<>();
        Connection con = Dbconnection.getConnection();
        if (con != null) {
            String sql = "SELECT diagnosis, treatment, prescription, visit_date FROM MedicalHistory WHERE P_ID=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, id);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                history.add(rs.getString("diagnosis") + " | " +
                            rs.getString("treatment") + " | " +
                            rs.getString("prescription") + " | " +
                            rs.getDate("visit_date"));
            }
            con.close();
        }
        return history;
    }

    public int getId() { return id; }
    public String getName() { return name; }
    public boolean isAdmitted() { return admitted; }
}
